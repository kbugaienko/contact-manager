{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","async","delete","name","email","phone","website","address","className","onClick","style","cursor","float","color","bind","to","marginRight","marginLeft","street","suite","city","zipcode","Contacts","Fragment","key","Header","branding","defaultProps","TextInputGroup","label","placecholder","onChange","error","htmlFor","classnames","placeholder","AddContact","address_street","address_suite","address_city","address_zipcode","errors","onSubmit","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b30d4ad.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload)\n      };\n      case \"ADD_CONTACT\":\n        return {\n          ...state,\n          contacts: [action.payload, ...state.contacts]\n        };\n      case 'UPDATE_CONTACT':\n        return {\n          ...state,\n          contacts: state.contacts.map(\n            contact => \n              contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n          )\n        };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action))\n    }\n  }\n  \n  // componentDidMount() {\n  //   axios\n  //     .get('https://jsonplaceholder.typicode.com/users')\n  //     .then(res => this.setState({contacts: res.data}));\n  // }\n\n  async componentDidMount() {\n    const res = await axios\n      .get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({contacts: res.data});\n  }\n  \n  render() {\n    return(\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Consumer } from '../../context';\n\nimport './contact.css';\n\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = e => {\n    // update our state\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async(id, dispatch) => {\n    try {\n      await axios.delete\n        (`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({type:'DELETE_CONTACT', payload: id});\n    } catch(e) {\n      dispatch({type:'DELETE_CONTACT', payload: id});\n    }  \n  };\n  \n  render(){\n    const { id, name, email, phone, website, address } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return(\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div className=\"card card-body mb-3\">\n              <h4>{name} {' '}\n\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer'}}\n                />\n\n                <i className=\"fas fa-times\" style={{\n                  cursor: 'pointer',\n                  float: 'right',\n                  color: 'red' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n\n                <Link to={`contact/edit/${id}`}>\n                  <i \n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight:'1rem'\n                    }}  \n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (<ul className=\"list-group\">\n                <li className=\"list-group-item\">\n                  <p><i className='fas fa-envelope'></i> Email: {email}</p>\n                </li>\n                <li className=\"list-group-item\">\n                    <p><i className='fas fa-phone'></i> Phone: {phone}</p>\n                </li>\n                <li className=\"list-group-item\">\n                    <p><i className='fab fa-firefox-browser'></i> Website: {website}</p>\n                </li>\n                <li className=\"list-group-item\">\n                    <p><i className='fas fa-address-card'></i> Address: \n                      <address style={{ marginLeft: '6em' }}>\n                        <i>Street: {address.street}</i><br></br>\n                        <i>Suite: {address.suite}</i><br></br>\n                        <i>City: {address.city}</i><br></br>\n                        <i>ZipCode: {address.zipcode}</i>\n                      </address>\n                    </p>\n                </li>\n              </ul>) : null}\n            </div>\n          )\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n};\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\n\nclass Contacts extends Component {\n  render() {\n    return(\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return(\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n              <Contact \n                key={contact.id}\n                contact={contact}>\n              </Contact>\n              ))}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n    const { branding } = props;\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className='container'>\n          <Link to=\"/\" className=\"navbar-brand\">\n            {branding}\n          </Link>\n\n          <div>\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link\">\n                  <i className=\"fas fa-home\" /> Home</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n};\n\nHeader.defaultProps = {\n    branding: \"My App\"\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage contacts</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placecholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input\n                type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placecholder}\n                value={value}\n                onChange={onChange}\n            />\n            { error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placecholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nimport axios from 'axios';\n\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    website: '',\n    address_street: '',\n    address_suite: '',\n    address_city: '',\n    address_zipcode: '',\n    errors: {}\n  };\n\n  onSubmit = async(dispatch, e) => {\n    e.preventDefault();\n\n    const { \n      name,\n      email,\n      phone,\n      website,\n      address_street,\n      address_suite,\n      address_city,\n      address_zipcode } = this.state;\n\n\n    // check for errors\n    if (name === '') {\n      this.setState({\n        errors: { name: \"Name is required\" }\n      });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({\n        errors: { email: \"Email is required\" }\n      });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({\n        errors: { phone: \"Phone is required\" }\n      });\n      return;\n    }\n\n    if (website === '') {\n      this.setState({\n        errors: { website: \"Website is required\" }\n      });\n      return;\n    }\n\n    if (address_street === '') {\n      this.setState({\n        errors: { address_street: \"Street is required\" }\n      });\n      return;\n    }\n\n    if (address_suite === '') {\n      this.setState({\n        errors: { address_suite: \"Suite is required\" }\n      });\n      return;\n    }\n\n    if (address_city === '') {\n      this.setState({\n        errors: { address_city: \"City is required\" }\n      });\n      return;\n    }\n\n    if (address_zipcode === '') {\n      this.setState({\n        errors: { address_zipcode: \"ZipCode is required\" }\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone,\n      website,\n      address_street,\n      address_suite,\n      address_city,\n      address_zipcode\n    };\n\n    const res = await axios\n      .post('https://jsonplaceholder.typicode.com/users', newContact);\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    // clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      website: '',\n      address_street: '',\n      address_suite: '',\n      address_city: '',\n      address_zipcode: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n    // change data in field of state\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n      const { \n        name,\n        email,\n        phone,\n        website,\n        address_street,\n        address_suite,\n        address_city,\n        address_zipcode,\n        errors } = this.state;\n\n      return (\n        <Consumer>\n          {value => {\n            const { dispatch } = value;\n            return(\n              <div className=\"card mb-3\">\n                <div className=\"card-header\">Add Contact</div>\n                <div className=\"card-body\">\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                    <TextInputGroup \n                      label=\"Name\"\n                      name=\"name\"\n                      placecholder=\"Enter Name\"\n                      value={name}\n                      onChange={this.onChange}\n                      error={errors.name}\n                    />\n                    <TextInputGroup \n                      label=\"Email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placecholder=\"Enter Email\"\n                      value={email}\n                      onChange={this.onChange}\n                      error={errors.email}\n                    />\n                    <TextInputGroup \n                      label=\"Phone\"\n                      name=\"phone\"\n                      placecholder=\"Enter Phone\"\n                      value={phone}\n                      onChange={this.onChange}\n                      error={errors.phone}\n                    />\n\n                    <TextInputGroup \n                      label=\"Website\"\n                      name=\"website\"\n                      placecholder=\"Enter Website\"\n                      value={website}\n                      onChange={this.onChange}\n                      error={errors.website}\n                    />\n\n                    <TextInputGroup \n                      label=\"Street\"\n                      name=\"address_street\"\n                      placecholder=\"Enter Street\"\n                      value={address_street}\n                      onChange={this.onChange}\n                      error={errors.address_street}\n                    />\n\n                    <TextInputGroup \n                      label='Suite'\n                      name=\"address_suite\"\n                      placecholder=\"Enter Suite\"\n                      value={address_suite}\n                      onChange={this.onChange}\n                      error={errors.address_suite}\n                    />\n\n                    <TextInputGroup \n                      label='City'\n                      name=\"address_city\"\n                      placecholder=\"Enter City\"\n                      value={address_city}\n                      onChange={this.onChange}\n                      error={errors.address_city}\n                    />\n\n                    <TextInputGroup \n                      label='ZipCode'\n                      name=\"address_zipcode\"\n                      placecholder=\"Enter ZipCode\"\n                      value={address_zipcode}\n                      onChange={this.onChange}\n                      error={errors.address_zipcode}\n                    />\n                    \n                    <input \n                      type=\"submit\"\n                      value=\"Add Contact\"\n                      className=\"btn btn-outline-success btn-block\"/>\n                  </form>\n                </div>\n              </div>\n            )\n          }}\n        </Consumer>\n      )\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    website: '',\n    address_street: '',\n    address_suite: '',\n    address_city: '',\n    address_zipcode: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n  \n    const contact = res.data;\n    \n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n      website: contact.website,\n      address_street: contact.address.street,\n      address_suite: contact.address.suite,\n      address_city: contact.address.city,\n      address_zipcode: contact.address.zipcode\n    });\n  }\n\n  onSubmit = async(dispatch, e) => {\n    e.preventDefault();\n\n    const { \n      name,\n      email,\n      phone,\n      website,\n      address_street,\n      address_suite,\n      address_city,\n      address_zipcode } = this.state;\n\n    // check for errors\n    if (name === '') {\n      this.setState({\n        errors: { name: \"Name is required\" }\n      });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({\n        errors: { email: \"Email is required\" }\n      });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({\n        errors: { phone: \"Phone is required\" }\n      });\n      return;\n    }\n\n    if (website === '') {\n      this.setState({\n        errors: { website: \"Website is required\" }\n      });\n      return;\n    }\n\n    if (address_street === '') {\n      this.setState({\n        errors: { address_street: \"Street is required\" }\n      });\n      return;\n    }\n\n    if (address_suite === '') {\n      this.setState({\n        errors: { address_suite: \"Suite is required\" }\n      });\n      return;\n    }\n\n    if (address_city === '') {\n      this.setState({\n        errors: { address_city: \"City is required\" }\n      });\n      return;\n    }\n\n    if (address_zipcode === '') {\n      this.setState({\n        errors: { address_zipcode: \"ZipCode is required\" }\n      });\n      return;\n    }\n\n    const updContact = {\n      name, \n      email,\n      phone,\n      website,\n      address: {\n        street: address_street,\n        suite: address_suite,\n        city: address_city,\n        zipcode: address_zipcode\n      }\n    }\n  \n    const { id } = this.props.match.params;\n\n    const res = await axios.put\n      (`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n    \n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data});\n\n    // clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      website: '',\n      address_street: '',\n      address_suite: '',\n      address_city: '',\n      address_zipcode: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  // change data in field of state\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n      const { name, email, phone, website, \n        address_street, address_suite,\n        address_city, address_zipcode, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup \n                    label=\"Name\"\n                    name=\"name\"\n                    placecholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup \n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placecholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup \n                    label=\"Phone\"\n                    name=\"phone\"\n                    placecholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <TextInputGroup \n                    label=\"Website\"\n                    name=\"website\"\n                    placecholder=\"Enter Website\"\n                    value={website}\n                    onChange={this.onChange}\n                    error={errors.website}\n                  />\n\n                  <TextInputGroup \n                    label=\"Street\"\n                    name=\"address_street\"\n                    placecholder=\"Enter Street\"\n                    value={address_street}\n                    onChange={this.onChange}\n                    error={errors.address_street}\n                  />\n\n                  <TextInputGroup \n                    label='Suite'\n                    name=\"address_suite\"\n                    placecholder=\"Enter Suite\"\n                    value={address_suite}\n                    onChange={this.onChange}\n                    error={errors.address_suite}\n                  />\n\n                  <TextInputGroup \n                    label='City'\n                    name=\"address_city\"\n                    placecholder=\"Enter City\"\n                    value={address_city}\n                    onChange={this.onChange}\n                    error={errors.address_city}\n                  />\n\n                  <TextInputGroup \n                    label='ZipCode'\n                    name=\"address_zipcode\"\n                    placecholder=\"Enter ZipCode\"\n                    value={address_zipcode}\n                    onChange={this.onChange}\n                    error={errors.address_zipcode}\n                  />\n\n                  <input \n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-outline-success btn-block\"/>\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data => this.setState({\n        title: data.title,\n        body: data.body\n      }));\n  }\n\n  // UNSAFE_componentWillMount() {\n  //   console.log('componenWillMount....');\n  // }\n\n  // UNSAFE_componentDidUpdate() {\n  //   console.log('componentDidUpdate.....');\n  // }\n\n  // UNSAFE_componentWillReceiveProps(nextProps, nextState) {\n  //   console.log('componentWillReceiveProps.....');\n  // }\n  \n  // static getDerivedStateFromProps(nextProps, prevProps) {\n  //   return {\n  //     test: 'something'\n  //   };\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return(\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;","import React, {Component} from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/test';\n\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass App extends Component {\n  render(){\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}